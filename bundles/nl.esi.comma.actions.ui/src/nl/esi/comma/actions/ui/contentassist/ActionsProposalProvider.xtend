/*
 * generated by Xtext 2.10.0
 */
package nl.esi.comma.actions.ui.contentassist

import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.eclipse.xtext.Assignment
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import nl.esi.comma.actions.actions.AssignmentAction
import nl.esi.comma.expressions.ui.contentassist.ProposalHelper
import nl.esi.comma.types.types.RecordTypeDecl
import nl.esi.comma.actions.actions.RecordFieldAssignmentAction
import nl.esi.comma.expressions.expression.ExpressionRecordAccess

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class ActionsProposalProvider extends AbstractActionsProposalProvider {
    
    override completeAssignmentAction_Exp(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        super.completeAssignmentAction_Exp(model, assignment, context, acceptor)
        acceptEmptyRecord(model, assignment, context, acceptor)
    }
    
    override completeRecordFieldAssignmentAction_Exp(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor){
        super.completeRecordFieldAssignmentAction_Exp(model, assignment, context, acceptor)
        acceptEmptyRecordField(model, assignment, context, acceptor)
    }
    
    def acceptEmptyRecordField(EObject object, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        if (object instanceof RecordFieldAssignmentAction) {
            var field = object.fieldAccess
            if (field instanceof ExpressionRecordAccess) {
                var type = field.field.type
                val prop = '''
                        «ProposalHelper.defaultValue(type)»
                '''
                acceptor.accept(createTemplate(prop, prop, "", 0, context, 1000, -1, -1))
            }
        }
    }
    
    def acceptEmptyRecord(EObject object, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        if (object instanceof AssignmentAction) {
            var variable = object.assignment
            var type = variable.type.type
            if (type instanceof RecordTypeDecl) {
                var fields = type.fields
                val prop = '''
                    «type.name» {
                        «FOR field : fields SEPARATOR ","»
                        «field.name» = «ProposalHelper.defaultValue(field.type)»
                        «ENDFOR»
                    }
                '''
                acceptor.accept(createTemplate("Record "+type.name, prop, "", 0, context, 1000, -1, -1))
            }
        }
    }
    
}
