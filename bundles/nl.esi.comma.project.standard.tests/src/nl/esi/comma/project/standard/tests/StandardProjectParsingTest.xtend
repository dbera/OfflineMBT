/**
 * Copyright (c) 2024, 2025 TNO-ESI
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available
 * under the terms of the MIT License which is available at
 * https://opensource.org/licenses/MIT
 *
 * SPDX-License-Identifier: MIT
 */
/*
 * generated by Xtext 2.36.0
 */
package nl.esi.comma.project.standard.tests

import com.google.inject.Inject
import nl.esi.comma.project.standard.standardProject.Project
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(StandardProjectInjectorProvider)
class StandardProjectParsingTest {
	@Inject
	ParseHelper<Project> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
            Project Test {
                Generate Tests {
                    unit_test {
                        bpmn-file "SomeFile.bpmn"
                    }
                }
            }
        ''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
