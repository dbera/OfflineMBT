/*
 * generated by Xtext 2.36.0
 */
package nl.esi.comma.causalgraph.tests

import com.google.inject.Inject
import nl.esi.comma.causalgraph.causalGraph.CausalGraph
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(CausalGraphInjectorProvider)
class CausalGraphParsingTest {
    @Inject
    ParseHelper<CausalGraph> parseHelper

    @Test
    def void loadModel() {
        val result = parseHelper.parse('''
            requirement R1
            
            scenario S1:
              requirements: R1
            
            graph G1:
              type: CausalGraph
              
              node N1:
                step-name: "Some when"
                step-type: When
                
                scenario S1 step 1:
                  step-body: «'«'»//Empty«'»'»
            
              node N2:
                step-name: "Some then"
                step-type: Then
               
                scenario S1 step 2:
                  step-body: «'«'»//Empty«'»'»
                  
              edges:
                N1 -> N2
        ''')
        Assertions.assertNotNull(result)
        val errors = result.eResource.errors
        Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
    }
}
