/**
 * Copyright (c) 2024, 2025 TNO-ESI
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available
 * under the terms of the MIT License which is available at
 * https://opensource.org/licenses/MIT
 *
 * SPDX-License-Identifier: MIT
 */
grammar nl.esi.comma.systemconfig.Configuration with nl.esi.comma.expressions.Expression

generate configuration "http://www.esi.nl/comma/systemconfig/Configuration"

import "http://www.esi.nl/comma/expressions/Expression" as expr
import "http://www.esi.nl/comma/types/Types" as types

FeatureDefinition: {FeatureDefinition}
    imports += Import*
	('Feature-list' '{'
		features += Variable+
	'}')?
	configurations += Configuration*
;

@Override
ModelContainer returns types::ModelContainer:
	super::ModelContainer | FeatureDefinition
;

Configuration:
	'Configuration' name = ID '{'
		(featureList += [expr::Variable | ID] (',' featureList += [expr::Variable | ID])*)?
		fList += Feature*
	'}'
;

Feature:
    'feature' exp = Expression
;
