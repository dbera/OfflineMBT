grammar nl.esi.comma.project.standard.StandardProject with nl.esi.comma.types.Types

generate standardProject "http://www.esi.nl/comma/project/standard/StandardProject"

Project:
	'Project' name = ID 
	'{'
		(products += Product)?
		(tspecs += TSpec)?
		(statemachines += StateMachineGenerationBlock)?
	'}'
;

Product:
	'Generate' 'Tests' '{'
		taskname = ID '{'
			'product-file' product = STRING
			('path-to-python-exe' pythonExe = STRING)?
			('sut-product-files' stubProducts += STRING*)?
		'}'
	'}'
;

TSpec:
    'Generate' 'FAST' '{'
        taskname = ID '{'
            'abstract-tspec-file' tspec = STRING
        '}'
    '}'
;

StateMachineGenerationBlock:
	'Conformance-Coverage-And-Test-Generation' '{'
		taskname = ID '{'
			'constraints' ('files' constraintsFiles += STRING+ | 'directories' constraintsDirs += FilePath+)
			(visualizeSM ?= 'visualize-constraints')?
			(printConstraints ?= 'print-constraints')?
			(testGen = TestGeneration)?
			('use-scenario-file:' scenarioFile = STRING)?
			(checkCoCo ?= 'check-conformance-and-coverage')?
		'}'
	'}'
;

TestGeneration:
    'generate-test-scenarios' (numSCN = INT)? 'with-strategy' 
            (algorithmPrefixSuffix ?= 'prefix-suffix' 
            | algorithmPrefixSuffixMinimized ?= 'prefix-suffix-minimized'
            | algorithmPrefix ?= 'prefix' 
            | algorithmPrefixMinimized ?= 'prefix-minimized' 
            | algorithmDfs ?= 'dfs' | algorithmBfs ?= 'bfs') ('{' (
                    ('k:' k = INT)? &
                    ('timeout:' timeout = INT)? &
                    ('similarity-threshold(0-100):' similarity = INT)? &
                    (skipDuplicateSelfLoop?='skip-duplicate-self-loop')? &
                    (skipSelfLoop?='skip-self-loop')? &
                    (skipAny?='skip-any')?
                ) '}')?
;

FilePath:
	path = STRING
;
