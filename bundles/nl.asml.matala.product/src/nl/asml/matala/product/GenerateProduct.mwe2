module nl.asml.matala.product.GenerateProduct

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "nl.asml.matala.product"
				rootPath = rootPath
				/*runtimeTest = {
					enabled = true
				}*/
				eclipsePlugin = {
					enabled = true
				}
				/*eclipsePluginTest = {
					enabled = true
				}*/
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "nl.asml.matala.product.Product"
			fileExtensions = "ps"

			referencedResource = "platform:/resource/nl.esi.comma.behavior/model/generated/Behavior.genmodel"
			referencedResource = "platform:/resource/nl.esi.comma.actions/model/generated/Actions.genmodel"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = null
			junitSupport = {
				junitVersion = "5"
			}
			fragment = textmate.TextMateHighlightingFragment {
			    absolutePath = "../nl.asml.matala.product.lsp.editor/language/grammars"
			    override = true
			}
/*
			fragment = nl.esi.xtext.lsp.generator.lezer.LezerGrammarFragment {
                absolutePath = "../nl.asml.matala.product.lsp.editor/language/grammars"
                override = true
			}
*/
		}
	}
}
