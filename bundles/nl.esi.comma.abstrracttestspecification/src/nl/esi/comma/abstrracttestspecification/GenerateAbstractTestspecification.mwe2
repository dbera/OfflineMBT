module nl.esi.comma.abstrracttestspecification.GenerateAbstractTestspecification

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "nl.esi.comma.abstrracttestspecification"
				rootPath = rootPath
				eclipsePlugin = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "nl.esi.comma.abstrracttestspecification.AbstractTestspecification"
			fileExtensions = "atspec"

            referencedResource = "platform:/resource/nl.asml.matala.product/model/generated/Product.genmodel"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"

				// Enables several checks on the inferred Jvm model for Xbase languages concerning Java inheritance relations
				// composedCheck = "org.eclipse.xtext.xbase.validation.JvmGenericTypeValidator"

				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = null
            contentAssist = nl.esi.xtext.lsp.generator.ide.contentassist.IdeContentAssistFragment2 {
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
			
			scopeProvider = scoping.ImportNamespacesScopingFragment2 {
				
			}
//			
//			fragment = scoping.ImportNamespacesScopingFragment2 auto-inject {}
//    		fragment = exporting.QualifiedNamesFragment2 auto-inject {}
//    		fragment = builder.BuilderIntegrationFragment2 auto-inject {}
		}
	}
}
